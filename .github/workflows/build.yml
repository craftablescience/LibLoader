name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # nothing here
jobs:
  build-macos:
    strategy:
      fail-fast: true
      matrix:
        build_type: [Debug, Release]
        compiler: [clang]
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install LLVM from Homebrew
        run: brew install llvm

      - name: Configure CMake
        run: cmake -G "Unix Makefiles" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER="/usr/local/opt/llvm/bin/clang" -DCMAKE_CXX_COMPILER="/usr/local/opt/llvm/bin/clang++" -DLIBLOADER_BUILD_TEST=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler: [gcc, clang]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Necessary Packages
        run: sudo apt update && sudo apt install -y cmake build-essential xorg-dev mesa-common-dev mesa-utils

      - name: Install GCC
        if: ${{matrix.compiler == 'gcc'}}
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install Clang
        if: ${{matrix.compiler == 'clang'}}
        uses: egor-tensin/setup-clang@v1
        with:
          version: 13
          platform: x64

      - name: Configure CMake
        run: cmake -G "Unix Makefiles" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DLIBLOADER_BUILD_TEST=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

  build-mingw:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          cmake:p
    - name: Configure CMake
      run: cmake -G "Unix Makefiles" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER="/mingw64/bin/gcc.exe" -DCMAKE_CXX_COMPILER="/mingw64/bin/g++.exe" -DLIBLOADER_BUILD_TEST=ON

    - name: Build
      run: cmake --build build --config ${{matrix.build_type}}

  build-msvc:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          spectre: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DLIBLOADER_BUILD_TEST=ON

      - name: Build
        run: cmake --build build --config ${{matrix.build_type}}
